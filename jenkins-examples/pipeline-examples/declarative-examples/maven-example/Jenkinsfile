pipeline {
      agent any
    stages {
        stage ('Clone') {
            steps {
                git branch: 'master', url: "https://github.com/ganavikumar/project-examples.git"
            }
        }

        stage ('Artifactory configuration') {
            steps {
                rtServer (
                    id: "maven-cloud",
                    url: 'https://ganavijfrog.jfrog.io/',
                    credentialsId: 'cloud'
                )

                rtMavenDeployer (
                    id: "MAVEN_DEPLOYER",
                    serverId: "maven-cloud",
                    releaseRepo: 'test-libs-release-local',
                    snapshotRepo: 'test-libs-snapshot-local'
                )

                rtMavenResolver (
                    id: "MAVEN_RESOLVER",
                    serverId: "maven-cloud",
                    releaseRepo: 'test-libs-release',
                    snapshotRepo: 'test-libs-snapshot'
                )
            }
        }

        stage ('Exec Maven') {
            steps {
                rtMavenRun (
                    tool: 'maven-test', // Tool name from Jenkins configuration
                    pom: 'maven-examples/maven-example/pom.xml',
                    goals: 'clean deploy',
                    deployerId: "MAVEN_DEPLOYER",
                    resolverId: "MAVEN_RESOLVER"
                )
            }
        }

        stage ('Publish build info') {
            steps {
                rtPublishBuildInfo (
                    serverId: 'maven-cloud'
                )
            }
        }
    }
}
